from ._anvil_designer import Form1Template
from anvil import *
import anvil.server
import json
from collections import defaultdict


class Form1(Form1Template):
  def __init__(self, **properties):
    # Set Form properties and Data Bindings.
    self.init_components(**properties)
    response = anvil.server.call('getDrivers')
    text = response.get_bytes().decode('utf-8')
    drivers = json.loads(text)
    response = anvil.server.call('getTrips')
    text = response.get_bytes().decode('utf-8')
    trips = json.loads(text)
    driversNew = []
    for x in drivers:
      if x != "Joshua/Brian" or x != "NA" or x != "Patrick/Vincent" or x != "N/A":
        driversNew.append(x)
    driverCount = len(driversNew)
    tripCount = len(trips)
    self.driverCount.text = str(driverCount)
    self.tripCount.text = str(tripCount)
    # Step 1: Count the number of trips for each driver
    trip_count = defaultdict(int)
    for trip in trips:
      trip_count[trip['name']] += 1

# Step 2: Calculate the total amount generated by each driver
    amount_generated = defaultdict(float)
    for trip in trips:
      amount_generated[trip['name']] += float(trip['amount'].strip('$').replace(',', ''))

# Step 3: Calculate the average amount per trip
    average_amount_per_trip = defaultdict(float)
    for driver, total_amount in amount_generated.items():
      average_amount_per_trip[driver] = total_amount / trip_count[driver] if trip_count[driver] != 0 else 0

# Step 4: Rank the drivers based on the number of trips, amount generated, and average amount per trip
    ranked_drivers_trips = [{'name': driver, 'trips': trips} for driver, trips in sorted(trip_count.items(), key=lambda x: x[1], reverse=True)]
    ranked_drivers_amount = [{'name': driver, 'amount': f"${amount:,.2f}"} for driver, amount in sorted(amount_generated.items(), key=lambda x: x[1], reverse=True)]
    ranked_drivers_average = [{'name': driver, 'average_amount': f"${avg_amount:.2f}"} for driver, avg_amount in sorted(average_amount_per_trip.items(), key=lambda x: x[1], reverse=True)]
    self.repeating_panel_1.items = ranked_drivers_trips
    self.repeating_panel_2.items = ranked_drivers_amount
    #print(ranked_drivers_amount)



    
    
        
        

    # Any code you write here will run before the form opens.
